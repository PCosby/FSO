{"version":3,"sources":["components/ServComm.js","components/Contact.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Notice","vars","type","className","style","color","text","Contact","contact","name","number","onClick","window","confirm","ServerComm","then","result","setContacts","data","catch","setNotice","setTimeout","removeContact","changeFunction","event","fun","target","value","Filter","onSubmit","preventDefault","var","onChange","PersonForm","newName","setNewName","newNumber","setNewNumber","sameContact","contacts","forEach","c","toLowerCase","newNote","updateContact","response","concat","Persons","whiteList","pplList","filter","includes","filterText","length","map","App","props","useState","setFilter","notice","useEffect","ReactDOM","render","notes","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.59726118.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\nimport ServerComm from './ServComm'\r\n\r\n\r\nconst removeContact = vars => {\r\n  const b = window.confirm(`Delete ${vars.contact.name}? This cannot be undone.`)\r\n  if (b) {\r\n    ServerComm.remove(vars.contact.id).then(()=>{\r\n      ServerComm.getAll().then(result => {vars.setContacts(result.data)})\r\n    })\r\n    .catch(()=>{\r\n      vars.setNotice({type: \"error\", text: `${vars.contact.name} has already been removed`})\r\n      ServerComm.getAll().then(result => {vars.setContacts(result.data)})\r\n      setTimeout(() => {vars.setNotice({type:null,text:null})}, 5000)\r\n    })\r\n  }\r\n}\r\n\r\nconst updateContact = vars => {\r\n  const b = window.confirm(`${vars.contact.name} is already in the phonebook. Update this number?`)\r\n  if (b) {\r\n    const newNote = {...vars.contact, number: vars.newNumber}\r\n    ServerComm.update(vars.contact.id, newNote).then(()=>{\r\n      ServerComm.getAll().then(result => {vars.setContacts(result.data)})\r\n      vars.setNotice({type: \"update\", text: `Changed ${vars.contact.name}'s number`})\r\n      setTimeout(() => {vars.setNotice({type:null,text:null})}, 5000)\r\n    })\r\n    .catch(()=>{\r\n      vars.setNotice({type: \"error\", text: `${vars.contact.name} has already been removed`})\r\n      ServerComm.getAll().then(result => {vars.setContacts(result.data)})\r\n      setTimeout(() => {vars.setNotice({type:null,text:null})}, 5000)\r\n    })\r\n  }\r\n}\r\n\r\nconst Notice = vars => {\r\n  if (vars.type == null) return null\r\n\r\n  return(\r\n  <div>\r\n    <div className = \"notice\"  style = {{color: vars.type == \"error\" ? \"red\" : \"green\"}}>\r\n      {vars.text}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nconst Contact = (vars) => {\r\n  return (<div>\r\n    <li className = \"contact\">{vars.contact.name}: {vars.contact.number} <button onClick = {()=>removeContact(vars)}>Delete</button></li>\r\n  </div>)\r\n}\r\n\r\nconst changeFunction = (event, fun) => {\r\n\r\n  fun(event.target.value)\r\n\r\n}\r\n\r\nconst Filter = (vars) =>{\r\n  \r\n  return(\r\n  <form onSubmit = {(event) => event.preventDefault()}>\r\n  Filter: \r\n    <input value = {vars.var} onChange = {(event) => {changeFunction(event,vars.fun)}}/>\r\n  </form>)\r\n}\r\n\r\nconst PersonForm = (vars) =>{\r\n\r\n  const addPerson = (event) => {\r\n      event.preventDefault()\r\n\r\n      var sameContact = null\r\n\r\n      vars.contacts.forEach( c => {\r\n        if(sameContact == null && c.name.toLowerCase() === vars.newName.toLowerCase()){\r\n          sameContact = c\r\n        }\r\n      })\r\n\r\n      if(sameContact != null){\r\n        updateContact({\r\n          contact: sameContact,\r\n          newNumber: vars.newNumber,\r\n          setContacts: vars.setContacts,\r\n          setNotice: vars.setNotice\r\n        })\r\n      }\r\n      else{\r\n        const newNote = {\r\n          name: vars.newName,\r\n          number: vars.newNumber\r\n        }\r\n\r\n      ServerComm.create(newNote).then(response=>{\r\n        vars.setContacts(vars.contacts.concat(response.data))\r\n        vars.setNotice({type: \"add\", text: `Added ${newNote.name}`})\r\n        setTimeout(() => {vars.setNotice({type:null,text:null})}, 5000)\r\n      })\r\n\r\n      vars.setNewName('')\r\n      vars.setNewNumber('')\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n\r\n      <form onSubmit = {(event) => event.preventDefault()}>\r\n\r\n          <h1>Add new contact:</h1>\r\n\r\n          <div>\r\n          Name:\r\n          <input value = {vars.newName} onChange = {(event) =>changeFunction(event,vars.setNewName)}/>\r\n          </div>\r\n\r\n\r\n          <div>\r\n          Number:\r\n          <input value = {vars.newNumber} onChange = {(event) =>changeFunction(event,vars.setNewNumber)}/>\r\n          </div>\r\n\r\n        \r\n\r\n        </form>\r\n\r\n        <div>\r\n          <button type = \"submit\" onClick = {addPerson}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nconst Persons = (vars) => {\r\n\r\n  var whiteList = vars.pplList.filter( c => {\r\n  return c.name.toLowerCase().includes(vars.filterText.toLowerCase()) || vars.filterText.length === 0\r\n})\r\n\r\nreturn(<ul>\r\n      {whiteList.map(c => \r\n\r\n          <Contact key={c.id} contact={c} setContacts = {vars.setContacts} setNotice = {vars.setNotice}/>\r\n        \r\n      )}\r\n    </ul>)\r\n}\r\n\r\n\r\n\r\nexport {Filter,PersonForm,Persons, Notice}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Filter,PersonForm,Persons, Notice} from './components/Contact'\r\nimport ServerComm from './components/ServComm'\r\n\r\n\r\n\r\nconst App = (props) => {\r\n  \r\n  const [filter, setFilter] = useState(\"\")\r\n  const [contacts, setContacts] = useState([])\r\n  const [newName, setNewName] = useState(\"\")\r\n  const [newNumber, setNewNumber] = useState(\"\")\r\n  const [notice, setNotice] = useState({type:null, text:null})\r\n  \r\n\r\n  useEffect(() => {\r\n    ServerComm.getAll().then(response => {\r\n        setContacts(response.data)\r\n      })\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notice type = {notice.type} text = {notice.text}/>\r\n\r\n      <Filter fun = {setFilter} var = {filter} />\r\n      \r\n      <PersonForm contacts = {contacts} setContacts = {setContacts} setNotice = {setNotice}\r\n      newName = {newName} setNewName = {setNewName} newNumber = {newNumber} setNewNumber = {setNewNumber}\r\n      />\r\n      \r\n      <h1>Numbers</h1>\r\n\r\n      <Persons pplList = {contacts} filterText = {filter} setContacts = {setContacts} setNotice = {setNotice}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: 'HTML is easy',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true\r\n  },\r\n  {\r\n    id: 2,\r\n    content: 'Browser can execute only JavaScript',\r\n    date: '2019-05-30T18:39:34.091Z',\r\n    important: false\r\n  },\r\n  {\r\n    id: 3,\r\n    content: 'GET and POST are the most important methods of HTTP protocol',\r\n    date: '2019-05-30T19:20:14.298Z',\r\n    important: true\r\n  }\r\n]\r\n\r\nReactDOM.render(\r\n  <App notes={notes} />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}